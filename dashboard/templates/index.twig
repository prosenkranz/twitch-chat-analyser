{% extends 'layout.twig' %}
{% block additionalHeaders %}
<style type="text/css">
	#emote-charts > div {
		display: inline-block;
		vertical-align: top;
	}
	#emote-charts h4 {
		margin-top: 5px;
		margin-bottom: 5px;
	}
	#emote-charts .chart {
		height: 240px;
	}
	#emote-charts #emote-stats-chart-template {
		display: none;
	}
</style>
{% endblock %}
{% block content %}

<p>
	<form action="{{ path('index') }}" method="GET">
		Show last <input type="text" value="{{ shownMinutes }}" name="shownMinutes" pattern="[0-9]+" /> minutes
		<button type="submit">Go</button>
	</form>
</p>

<script type="text/javascript">
	function drawCharts() {
		drawEmoteCharts();
		drawTotalsChart();
		drawUserChart();
	}
</script>

<h2>Emotes</h2>
<p><b>Channel emotes:</b> {% for emote,type in emotes if type == 0 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>
<p><b>Global twitch emotes:</b> {% for emote,type in emotes if type == 1 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>
<p><b>BTTV:</b> {% for emote,type in emotes if type == 2 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>
<p><b>FFZ:</b> {% for emote,type in emotes if type == 3 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>
<p><b>Emoji:</b> {% for emote,type in emotes if type == 4 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>
<p><b>Other:</b> {% for emote,type in emotes if type < 0 or type > 4 %}<a href="{{ path('emote', {emote:emote}) }}">{{ emote }}</a> {% endfor %}</p>

<h2>Emote overview</h2>
<p><a href="{{ path('emotes') }}">Emote leaderboard</a></p>
<div id="emote-charts">
	<div id="emote-stats-chart-template" style="width:400px; height:280px;">
		<h4>Emote</h4>
		<div class="chart"></div>
	</div>
</div>

<script type="text/javascript">
	function populateEmotesChartData() {
		var chartData = {};
		{% for emote, emoteStat in emoteStats %}
		chartData['{{ emote }}'] = {
			'data': [
				['Time', 'Occurrences'],
				{% for stat in emoteStat %}
				[new Date({{ stat.timestamp }}), {{ stat.occurrences }}],
				{% endfor %}
			],
			'minOccurrences': {{ emoteStat[0].occurrences }}
		};
		{% endfor %}
		return chartData;
	}

	function drawEmoteChart(data, emote) {
		var chartDiv = $('#emote-stats-chart-template').clone();
		chartDiv.attr('id', 'emote-stats-chart-' + emote);
		chartDiv.find('h4').text(emote);
		$('#emote-charts').append(chartDiv);

		var chartDataTable = google.visualization.arrayToDataTable(data.data);
		var chart = new google.visualization.LineChart(chartDiv.find('.chart')[0]);
		var emoteChartOptions = {
			colors: [ '#9ae248' ],
			vAxis: {
				gridlines: {
					count: 5
				},
				viewWindow: {
					min: Math.max(0, data.minOccurrences - 500)
				},
				viewWindowMode: "explicit"
			},
			chartArea: {
				left: 80,
				top: 0,
				width: '75%',
				height: '90%'
			}
		};
		$.extend(true, emoteChartOptions, chartOptions);
		chart.draw(chartDataTable, emoteChartOptions);
	}

	function drawEmoteCharts() {
		var chartData = populateEmotesChartData();
		{% for emote in emoteStats|keys %}
		drawEmoteChart(chartData['{{ emote }}'], '{{ emote }}');
		{% endfor %}
	}
</script>


<h2>Total messages</h2>

<div id="total-stats-chart" style="width:1000px; height:400px"></div>

<script type="text/javascript">
	function drawTotalsChart() {
		var chartData = [
			[ 'Time', 'Messages' ]
			{%- for stat in channelStats -%}
			,[new Date({{ stat.timestamp }}), {{ stat.message_count }}]
			{%- endfor -%}
		];
		var data = google.visualization.arrayToDataTable(chartData);
		var chart = new google.visualization.LineChart(document.getElementById('total-stats-chart'));
		chart.draw(data, chartOptions);
	}
</script>





<h2>User message count overview</h2>

<p>
	<a href="{{ path('users') }}">User Leaderboard</a>
</p>

<div id="user-stats-chart" style="width:1000px; height:400px"></div>

<script type="text/javascript">
	function populateUsersData() {
		var chartData = [
			[ 'Time'{% for username in topChatters|keys %}, '{{ username }}'{% endfor %} ]
		{% for username, userStat in topChatters %}
			{%- for stat in userStat -%}
			,[new Date({{ stat.timestamp }}){% for username2 in topChatters|keys %},{% if username2 == username %}{{ stat.message_count }}{% else %}null{% endif %}{% endfor %}]
			{%- endfor -%}
		{% endfor %}
		];
		return chartData;
	}

	function drawUserChart() {
		var chartData = populateUsersData();
		var data = google.visualization.arrayToDataTable(chartData);
		var chart = new google.visualization.LineChart(document.getElementById('user-stats-chart'));
		chart.draw(data, chartOptions);
	}
</script>


{% endblock %}
